---
import LanguageIcon from 'astro-heroicons/outline/Language.astro'
import TagIcon from 'astro-heroicons/outline/Tag.astro'
import UserIcon from 'astro-heroicons/outline/User.astro'
import {
  articleHasTranslation,
  getArticlePath,
  getRootPath,
  languages,
  type Language,
} from '../utils/i18n'

export interface Props {
  currentLanguage: Language
  id?: string
}

const { currentLanguage, id } = Astro.props

async function getTranslationPath(language: Language, id?: string) {
  return id !== undefined && (await articleHasTranslation(id, language))
    ? getArticlePath(id, language)
    : getRootPath(language)
}
---

<header class="p-4 flex justify-between items-center">
  <a href={getRootPath(currentLanguage)} class="text-xl font-serif font-bold"
    >Danielâ€™s Blog</a
  >
  <nav class="flex justify-center items-center gap-4">
    <a href="/topics/" aria-label="Topics"><TagIcon class="size-6" /></a>
    <label class="relative">
      <LanguageIcon class="size-6" />
      <select
        class="opacity-0 absolute top-0 left-0 size-6"
        id="language-selector"
      >
        {
          await Promise.all(
            languages.map(async (language) => (
              <option
                value={await getTranslationPath(language, id)}
                selected={language.lang === currentLanguage.lang}
              >
                {language.label}
              </option>
            )),
          )
        }
      </select>
    </label>
    <a href="https://me.moecm.com" aria-label="Me"
      ><UserIcon class="size-6" /></a
    >
  </nav>
</header>

<script>
  import { navigate } from 'astro:transitions/client'

  document.addEventListener('astro:page-load', () => {
    document
      .querySelector('#language-selector')
      ?.addEventListener('change', (event) => {
        navigate((event.target as HTMLSelectElement).value)
      })
  })
</script>
